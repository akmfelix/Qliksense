Field tags are used to add metadata to your model. It is here that you can specify the field type as well as specify whether the field is a dimension or measure, among other things. There are two types of tags: 
    > System field tags: These are generated when the script is executed. All system field tags are preceded by a dollar sign ($). System tags are reserved words and cannot be used as custom tags.
    > Custom field tags: These are user-generated tags. You can create them with the TAG FIELD syntax.

$system     This tag is generated for all system fields that are automatically generated by Qlik Sense on script execution.
$key        A field providing a link between two or more tables.
$keypart    This tag is generated when a field is part of one or more synthetic key. Remember that synthetic keys are not recommended!
$syn        Tag for synthetic key fields.
$hidden     This fields denotes a hidden field. A hidden field will not appear in field selections when creating charts. These fields can still be used in expressions and set analysis but they will not show in your master items or tables fields. All tags from this point to the last one in this list can be manipulated in the script by the user.
$numeric    This tag denotes all values in this field are numeric. Excludes null values.
$integer    Same as $numeric but denotes integer values.
$text       All values in the field are of text type. No values are numeric.
$ascii      The field contains ASCII characters only.
$date       The values can be interpreted as dates. Remember that dates are in fact integer values. 
$timestamp  The values can be interpreted as timestamps.
$geoname    The field contains geographical data, such as country ISO codes.
$geopoint   This field contains data in the format of [latitude, longitude] which represents a data point in the map.
$geomultipolygon  This field contains geometry polygon data which represents an area in the map, such as country borders.

====================================
GEO DATA FIELDS 
Qlik Sense automatically recognizes that one of the tables contains geographical data, namely the Location table. Because Sense comes with an out-of-the-box map extension, whenever it identifies a field with geographical data in it, it will create either an extra field containing geopoints (for cities) or polygon data (for countries). The new fields are created within the same table where the geographical data is located in the format <data_field>_GeoInfo.

In my example, the Location table has two geo fields, CountryIsoCode and Country. Qlik Sense will create two fields containing polygon data with one called CountryIsoCode_GeoInfo and another one called Country_GeoInfo.

You can then use these fields to plot data on the map.

If a field is not recognized as geographical data, you can change it from the Edit field option in Data Manager. Alternatively, we can update the TAG FIELD section within the script.

####CODE
__countryGeoBase:
LOAD
	ISO3Code AS [__ISO3Code],
	ISO2Code AS [__ISO2Code],
	Polygon AS [__Polygon]
FROM [lib://AttachedFiles/countryGeo.qvd]
(qvd);

__countryCodeIsoTwo2Polygon:
MAPPING LOAD
	__ISO2Code,
	__Polygon
RESIDENT __countryGeoBase;

[Revenue]:
LOAD
	[MONTH_BUS_KEY],
	[MONTH_SURG_KEY] AS [MONTH_SURG_KEY-Moth Key],
	[PROD_BUS_KEY] AS [PROD_BUS_KEY-Product Id],
	[LOC_BUS_KEY] AS [LOC_BUS_KEY-CountryIsoCode],
	[Revenue],
	APPLYMAP( '__countryCodeIsoTwo2Polygon', UPPER([LOC_BUS_KEY]), '-') AS [Revenue.LOC_BUS_KEY_GeoInfo]
 FROM [lib://AttachedFiles/CountryRevenue.xlsx]
(ooxml, embedded labels, table is Revenue);

==============================
THE DECLARE SYNTAX
The Declare statement creates a definition for a field or group of fields. For example, Qlik Sense will automatically create extra fields whenever it finds a field containing dates. It automatically creates an autoCalendar using the Declare function.

